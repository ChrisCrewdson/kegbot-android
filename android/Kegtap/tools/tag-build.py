#!/usr/bin/env python

import datetime
import os
import sys

CLASS_TMPL = """
// Auto-generated by tag-build.py -- DO NOT EDIT!
package org.kegbot.app.build;

public final class BuildInfo {

  public static final String BUILD_DATE_HUMAN = "%(BUILD_DATE_HUMAN)s";

  public static final String BUILD_TAGS = "%(BUILD_TAGS)s";

  public static final boolean RELEASE_BUILD = %(RELEASE_BUILD)s;

}
"""

OUT_SRC_DIR = 'src/org/kegbot/app/build'
OUT_SRC_FILENAME = 'BuildInfo.java'

OUT_RES_DIR = 'res/values'
OUT_RES_FILENAME = 'build_strings.xml'

def usage():
  sys.stderr.write("Usage: %s <project_dir>\n" % sys.argv[0])
  sys.exit(1)

def main():
  if len(sys.argv) < 2:
    usage()

  project_dir = sys.argv[1]
  now = datetime.datetime.now()

  build_strings = {
    'RELEASE_BUILD' : 'false',
    'BUILD_DATE_HUMAN' : now.strftime('%Y%m%d-%H%M%S'),
    'BUILD_TAGS' : 'dev',
  }

  ### Write java file
  out_src_dir = os.path.join(project_dir, OUT_SRC_DIR)
  if not os.path.exists(out_src_dir):
    os.makedirs(out_src_dir)

  out_class = os.path.join(out_src_dir, OUT_SRC_FILENAME)
  f = open(out_class, 'w')
  f.write(CLASS_TMPL % build_strings)
  f.close()

  out_res_dir = os.path.join(project_dir, OUT_RES_DIR)
  if not os.path.exists(out_res_dir):
    os.makedirs(out_res_dir)

  out_res = os.path.join(out_res_dir, OUT_RES_FILENAME)
  f = open(out_res, 'w')
  f.write('<?xml version="1.0" encoding="utf-8"?>\n')
  f.write('<resources>\n')
  for k, v in build_strings.iteritems():
    f.write('  <string name="%s">%s</string>\n' % (k, str(v)));
  f.write('</resources>\n')
  f.close()

if __name__ == '__main__':
  main()
